void FillArray(int[] collection)
{
    int length = collection.Length;
    int index = 0;
    while (index < length)
    {
        collection[index] = new Random().Next(1, 10);
        index++;
    }
    // Метод, типа Void , с названием FillArray принимет в себя массив 
    // целочисленных значений.
    // В нём:
    //     - length - переменная указывающая на количество элементов массива.
    //     - Счётчик index.
    //     - Цикл, для последовательного заполнения каждого элемента массива.
    // Для его заполнения используем генератор случайных чисел:
    //     Случайное число от 1 до 10, будет записано в элемент массива,
    //     с текущим индексом.
    //     Затем счётчик перейдёт к следующему элементу.
}

void PrintArray(int[] coll)
{
    int length = coll.Length;
    int index = 0;
    while (index < length)
    {
        Console.WriteLine(coll[index]);
        index++;
    }
    // Метод, типа Void , с названием PrintArray принимет в себя массив 
    // целочисленных значений.
    // В нём:
    //     - length - переменная указывающая на количество элементов массива.
    //     - Счётчик index.
    //     - Цикл, для последовательного вывода в терминале каждого элемента 
    //     массива. 
}

int IndexOf(int[] collection, int find)
{
    int length = collection.Length;
    int index =0;
    int position = -1; // -1 - программа выдаст в том случае,когда
                       // не найдёт искомого элемента

    while(index < length)
    {
        if (collection[index]==find)
        {
            position = index;
        } 
        index++;
    }
    return position;
// Метод типа int : вбирает в себя массив и переменную.
// В нем: - переменные length (количество элементов массива),
//          счётчик и переменная обозначающая номер ячейки массива
//          (для вывода результата метода)
//        - Цикл проверяющий каждый элемент массива а в нём условие
//        в котором при совпадении значения переменной
//        (заданной в приходящем аргументе в метод) с значением в 
//        проверяемой ячейке массива - записать её как номер НУЖНОЙ
//        ячейки. Иначе перейти к проверке следующего элемента.
//        - Вернуть результат (номер совпавшей ячейки).
}

int[] array = new int[10];  //- созданиёт новый массив с количеством 
                            //  элементов [10].(по умолчанию все элементы
                            //  массива равны 0, т.е. массив пуст)
FillArray(array);
PrintArray(array);
Console.WriteLine();        // Для разделения массива и результата 
                            // поиска.  

int pos = IndexOf(array, 4); // Назначаем переменную, в каторой будет
                             // храниться результат работы метода
                             // для поика совпадающего значения в 
                             // каком-то из элементов массива с заданным
                             // значением (4).

Console.WriteLine(pos);      // Вывод в терминал

// void(с англ. - пустота) - это тим метода, каторый берёт в себя какие 
// либо аргументы и ничего НОВОГО не не возвращает.
// (в методе void  команда return не нужна).